//best solution
class Solution {
public:
    int trap(vector<int>& height) {
        int left, right, n;
        n = height.size();
        int l_max, r_max;
        left = 0;
        right = n - 1;
        l_max = height[left];
        r_max = height[right];
        int area = 0;

        while (left < right) {
            if (l_max <= r_max) {
                 left++;
                l_max = l_max < height[left] ? height[left] : l_max;
                int t = l_max - height[left] > 0 ? l_max - height[left] : 0;
                area = area + t;

               
            } else {
                right--;
                r_max = r_max < height[right] ? height[right] : r_max;
                int t = r_max - height[right] > 0 ? r_max - height[right] : 0;
                area = area + t;

                
            }
        }
        return area;
    }
};
