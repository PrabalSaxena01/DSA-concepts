class Solution {
public:
    bool isPrime(int n) {
        if (n <= 1)
            return false;
        if (n <= 3)
            return true;
        if (n % 2 == 0 || n % 3 == 0)
            return false;

        for (int i = 5; i * i <= n; i += 6) {
            if (n % i == 0 || n % (i + 2) == 0)
                return false;
        }
        return true;
    }
    vector<int> closestPrimes(int left, int right) {

        int min = INT_MAX;
        int a = -1;
        int b = -1;
        vector<int> result;
        int n1 = 0, n2 = 0;
        for (int i = left; i <= right; i++) {
            if (isPrime(i)) {
                if (n1 == 0)
                    n1 = i;
                else {
                    n2 = i;
                    if (min > n2 - n1){
                    min = n2 - n1;
                    a = n1;
                    b = n2;
                    
                    }
                    n1 = n2;
                }
            }
        }
        if (a != -1 && b != -1) {
            result.push_back(a);
            result.push_back(b);
        }
        else{
            result.push_back(-1);
            result.push_back(-1);
        }
        return result;
    }
};
