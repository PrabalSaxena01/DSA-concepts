// wrong approach 
class Solution {
public:
    long long maxAlternatingSum(vector<int>& nums) {
        int n = nums.size();
        if (n == 1) {
            return nums[0];
        }
        if (n == 2) {
            return nums[0] >= nums[1] ? nums[0] : nums[1];
        }
        int min = nums[1];
        int k=1;
        int max1 = 0;
        int max2 = 0;

        for (int i = 0; i < n; i++) {
            if (i != 0 && i != n - 1 && nums[i] < min) {
                min = nums[i];
                k =i;
            }
        }
        int i =0;
        while(i<k){
            if(nums[i]>max1)
            max1=nums[i];
            i++;
        }
        i = n-1;
        while(i>k){
            if(nums[i]>max2)
            max2=nums[i];
            i--;
        }
        int result = max((max1+max2-min),max(max1,max2));
        return result;
    }
};
