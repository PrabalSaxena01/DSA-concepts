//TLE
class Solution {
public:
    int numberOfAlternatingGroups(vector<int>& colors, int k) {
        int s = colors.size();
        int count = 0;
        for (int i = 0; i < s; i++) {
            // int p = i;
            bool valid = true;
            for (int j = 0; j < k - 1; j++) {
                if (colors[(j + i) % s] != colors[(j + i + 1) % s]) {

                } else {
                    valid = false;
                    break;
                }
            }
            if (valid == true) {
                count++;
            }
        }
        return count;
    }
};
//AI 
class Solution {
public:
    int numberOfAlternatingGroups(vector<int>& colors, int k) {
        int s = colors.size();
        int count = 0;
        int alternatingPairs = 0;

        for (int j = 0; j < k - 1; j++) {
            if (colors[j] != colors[j + 1]) {
                alternatingPairs++;
            }
        }

        if (alternatingPairs == k - 1) count++;

        for (int i = 1; i < s; i++) {
            if (colors[i - 1] != colors[i]) {
                alternatingPairs--;
            }

            if (colors[(i + k - 2) % s] != colors[(i + k - 1) % s]) {
                alternatingPairs++;
            }

            if (alternatingPairs == k - 1) count++;
        }

        return count;
    }
};
