class Solution {
public:
    int lengthOfLongestSubstring(string s) {

        {
            vector<int> lastIndex(
                256,
                -1); // Stores last index of each character (-1 means not seen)
            int maxLength = 0,
                left = 0; // `left` is the start of the current substring

            for (int right = 0; right < s.size(); right++) {
                if (lastIndex[s[right]] >= left) {
                    left = lastIndex[s[right]] +
                           1; // Move `left` to avoid duplicates
                }
                lastIndex[s[right]] =
                    right; // Update last seen index of the character
                maxLength =
                    max(maxLength, right - left + 1); // Update max length
            }

            return maxLength;
        }
    }
};
