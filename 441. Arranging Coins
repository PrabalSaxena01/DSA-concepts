class Solution {
public:
    int arrangeCoins(int n) {
        int p = 1;
      long int sum = 0;

        while (sum + p <= n) { 
            sum += p;
            p++;
        }

        return p - 1; 
    }
};
//optimal
class Solution {
public:
    int arrangeCoins(int n) {
        if (n == 1 || n == 2) {
            return 1;
        }
        int left = 1;
        int right = n;
        while (left <= right) {
            long int mid = left + (right - left) / 2;
            long int st = (mid * (mid + 1)) / 2;
            if (st == n) {
                return mid;
            } else if (st < n) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return right;
    }

}
;
